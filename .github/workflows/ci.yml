name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_exact.txt
        pip install pytest pytest-cov flake8 black
    
    - name: Lint with flake8
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Format check with black
      run: |
        black --check --diff .
    
    - name: Test with pytest
      run: |
        pytest test_ai_agent.py -v --cov=agents --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit Security Linter
      run: |
        bandit -r . -f json -o bandit-report.json || true
    
    - name: Run Safety Check
      run: |
        safety check --json --output safety-report.json || true

  build:
    runs-on: ubuntu-latest
    needs: [test, security]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_exact.txt
    
    - name: Test imports
      run: |
        python -c "import main; print('Main module imports successfully')"
        python -c "from agents.trading_agent import TradingAgent; print('AI Agent imports successfully')"
        python -c "from trading.risk_manager import risk_manager; print('Risk Manager imports successfully')"
    
    - name: Create release package
      run: |
        mkdir -p releases
        zip -r releases/bot_trading_v10_${{ github.sha }}.zip . -x "*.git*" "*.pyc" "__pycache__/*" "venv/*" ".env" "*.log"
    
    - name: Upload release artifacts
      uses: actions/upload-artifact@v3
      with:
        name: bot-trading-v10-${{ github.sha }}
        path: releases/
