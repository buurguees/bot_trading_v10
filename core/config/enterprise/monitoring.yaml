# Ruta: core/config/enterprise/monitoring.yaml
# monitoring.yaml - Configuración de monitoreo enterprise
# Ubicación: C:\TradingBot_v10\config\enterprise\monitoring.yaml

version: "1.0"

# Configuración de Prometheus
prometheus:
  # Configuración del servidor
  server:
    host: "localhost"
    port: 9090
    external_url: "http://localhost:9090"
    
  # Configuración de scraping
  scraping:
    global_interval: "15s"
    global_timeout: "10s"
    evaluation_interval: "15s"
    
  # Jobs de scraping
  scrape_configs:
    - job_name: "trading_bot_main"
      static_configs:
        - targets: ["localhost:8000"]
      scrape_interval: "5s"
      metrics_path: "/metrics"
      
    - job_name: "trading_bot_data_collection"
      static_configs:
        - targets: ["localhost:8001"]
      scrape_interval: "10s"
      
    - job_name: "trading_bot_ml_training"
      static_configs:
        - targets: ["localhost:8002"]
      scrape_interval: "15s"
      
    - job_name: "trading_bot_trading_engine"
      static_configs:
        - targets: ["localhost:8003"]
      scrape_interval: "5s"

# Configuración de Grafana
grafana:
  # Configuración del servidor
  server:
    host: "localhost"
    port: 3000
    root_url: "http://localhost:3000"
    
  # Datasources
  datasources:
    - name: "Prometheus"
      type: "prometheus"
      url: "http://localhost:9090"
      access: "proxy"
      is_default: true
      
    - name: "TimescaleDB"
      type: "postgres"
      url: "localhost:5432"
      database: "trading_bot_enterprise"
      user: "trading_bot"
      ssl_mode: "disable"
      
  # Dashboards predefinidos
  dashboards:
    - name: "Trading Bot Overview"
      path: "monitoring/grafana/dashboards/overview.json"
      folder: "Trading Bot"
      
    - name: "Data Collection"
      path: "monitoring/grafana/dashboards/data_collection.json"
      folder: "Trading Bot"
      
    - name: "ML Training"
      path: "monitoring/grafana/dashboards/ml_training.json"
      folder: "Trading Bot"
      
    - name: "Trading Performance"
      path: "monitoring/grafana/dashboards/trading_performance.json"
      folder: "Trading Bot"
      
    - name: "Infrastructure"
      path: "monitoring/grafana/dashboards/infrastructure.json"
      folder: "Trading Bot"

# Métricas específicas del trading bot
metrics:
  # Métricas de data collection
  data_collection:
    - name: "ticks_received_total"
      type: "counter"
      description: "Total de ticks recibidos"
      labels: ["symbol", "source"]
      
    - name: "ticks_processed_total"
      type: "counter"
      description: "Total de ticks procesados"
      labels: ["symbol", "status"]
      
    - name: "ticks_dropped_total"
      type: "counter"
      description: "Total de ticks descartados"
      labels: ["symbol", "reason"]
      
    - name: "processing_latency_seconds"
      type: "histogram"
      description: "Latencia de procesamiento de ticks"
      labels: ["symbol", "operation"]
      buckets: [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1.0, 5.0]
      
    - name: "websocket_connections_active"
      type: "gauge"
      description: "Conexiones WebSocket activas"
      labels: ["exchange", "symbol"]
      
  # Métricas de ML training
  ml_training:
    - name: "training_epoch_duration_seconds"
      type: "histogram"
      description: "Duración de epochs de entrenamiento"
      labels: ["model_name", "symbol"]
      buckets: [1, 5, 10, 30, 60, 300, 600, 1800, 3600]
      
    - name: "training_loss"
      type: "gauge"
      description: "Loss de entrenamiento actual"
      labels: ["model_name", "symbol", "phase"]
      
    - name: "training_accuracy"
      type: "gauge"
      description: "Accuracy de entrenamiento actual"
      labels: ["model_name", "symbol", "phase"]
      
    - name: "model_inference_time_seconds"
      type: "histogram"
      description: "Tiempo de inferencia del modelo"
      labels: ["model_name", "symbol"]
      buckets: [0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1.0]
      
  # Métricas de trading
  trading:
    - name: "trades_executed_total"
      type: "counter"
      description: "Total de trades ejecutados"
      labels: ["symbol", "side", "status"]
      
    - name: "account_balance_usd"
      type: "gauge"
      description: "Balance de cuenta en USD"
      labels: ["account_type"]
      
    - name: "open_positions_count"
      type: "gauge"
      description: "Número de posiciones abiertas"
      labels: ["symbol", "side"]
      
    - name: "trade_pnl_usd"
      type: "histogram"
      description: "PnL de trades en USD"
      labels: ["symbol", "side"]
      buckets: [-1000, -500, -100, -50, -10, 0, 10, 50, 100, 500, 1000]
      
    - name: "order_execution_time_seconds"
      type: "histogram"
      description: "Tiempo de ejecución de órdenes"
      labels: ["symbol", "order_type"]
      buckets: [0.1, 0.5, 1.0, 2.0, 5.0, 10.0, 30.0]
      
  # Métricas de sistema
  system:
    - name: "cpu_usage_percent"
      type: "gauge"
      description: "Uso de CPU en porcentaje"
      labels: ["core"]
      
    - name: "memory_usage_bytes"
      type: "gauge"
      description: "Uso de memoria en bytes"
      labels: ["type"]
      
    - name: "disk_usage_bytes"
      type: "gauge"
      description: "Uso de disco en bytes"
      labels: ["mount_point", "type"]
      
    - name: "network_io_bytes_total"
      type: "counter"
      description: "Total de bytes de red"
      labels: ["direction", "interface"]

# Configuración de alertas
alerting:
  # Alert Manager
  alert_manager:
    enabled: true
    host: "localhost"
    port: 9093
    external_url: "http://localhost:9093"
    
  # Configuración de notificaciones
  notifications:
    # Slack
    slack:
      enabled: true
      webhook_url: ""  # Configurar en vault
      channel: "#trading-bot-alerts"
      username: "TradingBot-AlertManager"
      
    # Email
    email:
      enabled: false
      smtp_server: "smtp.gmail.com"
      smtp_port: 587
      from: "trading-bot@company.com"
      to: ["admin@company.com"]
      
    # Discord
    discord:
      enabled: false
      webhook_url: ""  # Configurar en vault
      
  # Reglas de alertas
  rules:
    # Alertas críticas
    critical:
      - name: "TradingBotDown"
        expression: "up{job='trading_bot_main'} == 0"
        duration: "1m"
        severity: "critical"
        message: "Trading Bot principal está caído"
        
      - name: "DatabaseDown"
        expression: "up{job='timescaledb'} == 0"
        duration: "30s"
        severity: "critical"
        message: "Base de datos TimescaleDB no responde"
        
      - name: "HighMemoryUsage"
        expression: "memory_usage_percent > 90"
        duration: "5m"
        severity: "critical"
        message: "Uso de memoria crítico: {{ $value }}%"
        
      - name: "HighCPUUsage"
        expression: "cpu_usage_percent > 95"
        duration: "10m"
        severity: "critical"
        message: "Uso de CPU crítico: {{ $value }}%"
        
    # Alertas de warning
    warning:
      - name: "HighTickDropRate"
        expression: "rate(ticks_dropped_total[5m]) / rate(ticks_received_total[5m]) > 0.05"
        duration: "2m"
        severity: "warning"
        message: "Alta tasa de ticks descartados: {{ $value }}%"
        
      - name: "SlowModelInference"
        expression: "histogram_quantile(0.95, model_inference_time_seconds) > 1.0"
        duration: "5m"
        severity: "warning"
        message: "Inferencia del modelo lenta: {{ $value }}s"
        
      - name: "WebSocketDisconnected"
        expression: "websocket_connections_active == 0"
        duration: "30s"
        severity: "warning"
        message: "Todas las conexiones WebSocket desconectadas"
        
      - name: "LowAccountBalance"
        expression: "account_balance_usd < 100"
        duration: "1m"
        severity: "warning"
        message: "Balance de cuenta bajo: ${{ $value }}"
        
    # Alertas informativas
    info:
      - name: "TrainingCompleted"
        expression: "increase(training_epochs_completed_total[1h]) > 0"
        duration: "0s"
        severity: "info"
        message: "Entrenamiento completado para {{ $labels.symbol }}"
        
      - name: "LargeTradeExecuted"
        expression: "trade_amount_usd > 1000"
        duration: "0s"
        severity: "info"
        message: "Trade grande ejecutado: ${{ $value }} en {{ $labels.symbol }}"

# Dashboards personalizados
custom_dashboards:
  # Dashboard principal
  main_dashboard:
    title: "Trading Bot - Vista Principal"
    refresh: "30s"
    time_range: "1h"
    
    panels:
      - title: "Estado del Sistema"
        type: "stat"
        targets:
          - expr: "up{job='trading_bot_main'}"
            legend: "Bot Principal"
          - expr: "websocket_connections_active"
            legend: "Conexiones WS"
            
      - title: "Ticks por Segundo"
        type: "graph"
        targets:
          - expr: "rate(ticks_received_total[1m])"
            legend: "{{ symbol }}"
            
      - title: "Latencia de Procesamiento"
        type: "graph"
        targets:
          - expr: "histogram_quantile(0.95, processing_latency_seconds)"
            legend: "P95 - {{ symbol }}"
            
      - title: "Balance de Cuenta"
        type: "stat"
        targets:
          - expr: "account_balance_usd"
            legend: "USD"
            
      - title: "Posiciones Abiertas"
        type: "table"
        targets:
          - expr: "open_positions_count"
            legend: "{{ symbol }} - {{ side }}"
            
  # Dashboard de entrenamiento
  training_dashboard:
    title: "ML Training - Monitoreo"
    refresh: "15s"
    time_range: "6h"
    
    panels:
      - title: "Training Loss"
        type: "graph"
        targets:
          - expr: "training_loss"
            legend: "{{ model_name }} - {{ symbol }}"
            
      - title: "Training Accuracy"
        type: "graph"
        targets:
          - expr: "training_accuracy"
            legend: "{{ model_name }} - {{ symbol }}"
            
      - title: "Epoch Duration"
        type: "graph"
        targets:
          - expr: "histogram_quantile(0.95, training_epoch_duration_seconds)"
            legend: "P95 - {{ symbol }}"
            
      - title: "Model Inference Time"
        type: "graph"
        targets:
          - expr: "histogram_quantile(0.95, model_inference_time_seconds)"
            legend: "P95 - {{ symbol }}"

# Logging configuration
logging:
  # Nivel de logs
  level: "INFO"  # DEBUG, INFO, WARNING, ERROR, CRITICAL
  
  # Formato de logs
  format: "%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s"
  
  # Configuración de archivos
  files:
    main:
      path: "logs/enterprise/monitoring/main.log"
      max_size_mb: 100
      backup_count: 10
      
    metrics:
      path: "logs/enterprise/monitoring/metrics.log"
      max_size_mb: 50
      backup_count: 20
      
    alerts:
      path: "logs/enterprise/monitoring/alerts.log"
      max_size_mb: 25
      backup_count: 30
      
  # Handlers
  handlers:
    console:
      enabled: true
      level: "INFO"
      
    file:
      enabled: true
      level: "DEBUG"
      
    syslog:
      enabled: false
      level: "WARNING"
      facility: "local0"

# Performance monitoring
performance:
  # Configuración de profiling
  profiling:
    enabled: true
    interval_seconds: 300  # 5 minutos
    output_path: "logs/enterprise/monitoring/profiling/"
    
    # Tipos de profiling
    types:
      - "cpu"
      - "memory"
      - "io"
      
  # Benchmarking
  benchmarks:
    enabled: true
    frequency: "daily"
    output_path: "reports/performance/"
    
    tests:
      - name: "data_processing_throughput"
        description: "Throughput de procesamiento de datos"
        target_tps: 1000
        
      - name: "model_inference_latency"
        description: "Latencia de inferencia del modelo"
        target_latency_ms: 100
        
      - name: "order_execution_speed"
        description: "Velocidad de ejecución de órdenes"
        target_latency_ms: 500

# Health checks
health_checks:
  enabled: true
  interval_seconds: 30
  timeout_seconds: 10
  
  # Checks específicos
  checks:
    - name: "database_connection"
      type: "database"
      config:
        host: "localhost"
        port: 5432
        database: "trading_bot_enterprise"
        
    - name: "redis_connection"
      type: "redis"
      config:
        host: "localhost"
        port: 6379
        
    - name: "kafka_connection"
      type: "kafka"
      config:
        bootstrap_servers: "localhost:9092"
        
    - name: "websocket_connection"
      type: "websocket"
      config:
        url: "wss://ws.bitget.com/spot/v1/stream"
        
    - name: "model_availability"
      type: "custom"
      script: "scripts/health_checks/check_model.py"
      
    - name: "disk_space"
      type: "system"
      config:
        path: "/"
        min_free_gb: 10
